
@{
    ViewBag.Title = "上传附件";
}
<div id="app" class="MainContainer">
    <div v-if="isVisible">
        <el-upload class="upload-demo"
                   ref="upload"
                   action="/api/FileHandler/FileUpload"
                   v-bind:on-success="handleSuccess"
                   v-bind:on-error="handleError"
                   accept=".xls,.xlsx"
                   v-bind:limit="1"
                   v-bind:data="uploadParm"
                   v-bind:file-list="fileList"
                   v-bind:auto-upload="false">
            <el-button slot="trigger" size="small" type="primary">选取文件</el-button>
            <el-button style="margin-left: 10px;" size="small" type="success" @@click="submitUpload">上传</el-button>
            <div slot="tip" class="el-upload__tip">
                每次上传一个文件，只能上传xls/xlsx文件，且不超过4M；
            </div>
        </el-upload>
        <div>
            <el-divider content-position="left">已上传文件列表</el-divider>
            <el-table v-bind:data="files"
                      v-bind:show-header="false"
                      style="width: 500px">
                <el-table-column prop="FileName">
                </el-table-column>
                <el-table-column fixed="right"
                                 width="70">
                    <template slot-scope="scope">
                        <el-button size="mini"
                                   type="danger"
                                   @@click="handleDelete(scope.$index, scope.row)">删除</el-button>
                    </template>
                </el-table-column>
            </el-table>
        </div>
    </div>
</div>
@section Scripts{
    <script src="~/Content/js/app.js"></script>
    <script>
        var kind = QueryString("kind");
        var keyValue = QueryString("keyValue");
        var app = new Vue({
            el: "#app",
            data: {
                isVisible: true,
                fileList:[],
                uploadParm: { kind: null, keyValue: null },
                files: []
            },
            created: function () {
                if (kind && keyValue) {
                    this.uploadParm.kind = decodeURIComponent(kind);
                    this.uploadParm.keyValue = keyValue;
                    this.getFileList();
                }
                else {
                    this.$message({
                        showClose: true,
                        message: "参数缺失",
                        type: 'warning'
                    });
                    this.isVisible = false;
                }
            },
            methods: {
                getFileList: function () {
                    this.loading = true;
                    axios.post('/api/FileHandler/GetFileList', this.uploadParm)
                    .then(function (response) {
                        app.files = response.data.data;
                    })
                    .catch(function (error) {

                    })
                },
                submitUpload() {
                    //手动上传文件列表
                    this.$refs.upload.submit();
                },
                handleSuccess(response, file, fileList) {
                    if (response.statusCode == 200) {
                        this.$message({
                            showClose: true,
                            message: "上传成功",
                            type: 'success'
                        });
                        this.getFileList();
                    }
                    else {
                        this.$message({
                            showClose: true,
                            message: response.message,
                            type: 'warning'
                        });
                    }
                    //清空已上传的文件列表
                    this.$refs.upload.clearFiles();
                },
                handleError(err, file, fileList) {
                    console.log(err);
                    this.$message({
                        showClose: true,
                        message: "上传失败",
                        type: 'warning'
                    });
                },
                handleDelete(index, row) {
                    this.$confirm('是否确认删除？', '提示', {
                        confirmButtonText: '确定',
                        cancelButtonText: '取消',
                        type: 'warning'
                    }).then(function () {
                        axios.post('/api/FileHandler/DeleteFile', { id: row.id })
                            .then(function (response) {
                                var res = response.data;
                                if (res.statusCode == 200) {
                                    app.$message({
                                        showClose: true,
                                        message: '删除成功',
                                        type: 'success'
                                    });
                                    app.files.splice(index, 1);//删除
                                }
                                else {
                                    app.$message({
                                        showClose: true,
                                        message: res.message,
                                        type: 'error'
                                    });
                                }
                            })
                    });
                }
            }
        })
    </script>
}

