@{
    ViewBag.Title = "Permission";
}
@section Styles{
    <style>
        .part-col
        {
            margin-top: 5px;
        }

        .el-radio
        {
            margin-right: 10px;
        }
    </style>
}
<div id="app" style="height: 100%;">
    <el-row class="SubContainer">
        <el-col v-bind:span="6">
            <el-col v-bind:span="24">
                <el-tag>角 色</el-tag>
            </el-col>
            <el-col v-bind:span="24" class="part-col">
                <template v-for="(role,index) in roles">
                    <div style="margin:0 0 5px 0;">
                        <el-radio v-model="selectRoleID" v-bind:label="role.RoleID">{{role.RoleName}}</el-radio>
                    </div>
                </template>
            </el-col>
        </el-col>
        <el-col v-bind:span="18">
            <el-col v-bind:span="20">
                <el-tag type="success">业务权限</el-tag>
            </el-col>
            <el-col v-bind:span="4">
                <el-button type="success" size="small" v-show="selectRoleID!==null" @@click="savePermission">保 存</el-button>
            </el-col>
            <el-col v-bind:span="24" class="part-col">
                <el-tree
                    v-bind:data="controlTree"
                    v-bind:props="defaultProps"
                    node-key="TreeID"
                    show-checkbox
                    highlight-current
                    ref="tree"
                    v-bind:default-expanded-keys="defaultExpandedKeys"
                    v-bind:expand-on-click-node="false"
                    @@node-expand="nodeExpand"
                    @@node-collapse="nodeCollapse">
                    <span class="custom-tree-node" slot-scope="{ node, data }">
                    <span>{{ node.label }}</span>
                    <span v-if="data.HaveQueryRange">
                      <el-radio-group v-model="data.QueryRange">
                            <el-radio label="self">个人</el-radio>
                            @*<el-radio label="department">本部门</el-radio>*@
                            <el-radio label="all">所有</el-radio>
                      </el-radio-group>
                    </span>
                  </span>
                </el-tree>
            </el-col>
        </el-col>
    </el-row>
</div>
@section Scripts{
    <script>
        var app = new Vue({
            el: '#app',
            data: function () {
                return {
                    roles: [],//角色列表
                    selectRoleID: null,//选中的角色ID
                    controlTree: [],//权限菜单树
                    defaultProps: {
                        id: 'TreeID',
                        children: 'Children',
                        label: 'Title'
                    },
                    defaultExpandedKeys: []//展开节点的key数组，动态更新，以防止菜单树数组改变时节点全部关闭
                }
            },
            created: function () {
                this.getRoles();
                this.getTree();
            },
            watch: {
                selectRoleID: function (val) {
                    this.getTree();
                }
            },
            methods: {
                //节点展开事件，将展开节点的key push到数组中
                nodeExpand: function(data,node,self){
                    this.defaultExpandedKeys.push(data.TreeID);
                },
                //节点关闭事件，将关闭节点的key从数组中移除
                nodeCollapse: function(data,node,self){
                    var index = this.defaultExpandedKeys.indexOf(data.TreeID);
                    if (index > -1) {
                        this.defaultExpandedKeys.splice(index, 1);
                    }
                },
                //获取角色列表
                getRoles: function () {
                    axios.post('/api/Role/GetList')
                    .then(function (response) {
                        app.roles = response.data.data;
                    })
                    .catch(function (error) {
                        
                    })
                },
                //获取权限树
                getTree: function () {
                    var loading = this.$loading({
                        lock: true,
                        text: 'Loading',
                        spinner: 'el-icon-loading',
                        background: 'rgba(255, 255, 255, 0.7)'
                    });
                    axios.post('/api/Permission/GetControlTree', { roleID: this.selectRoleID })
                    .then(function (response) {
                        app.controlTree = response.data.data.tree;
                        app.$refs.tree.setCheckedKeys(response.data.data.keys);
                        setTimeout(function () {
                            loading.close();
                        }, 500);
                    })
                    .catch(function (error) {

                    })
                },
                //保存业务权限
                savePermission: function () {
                    //console.log(this.$refs.tree.getHalfCheckedNodes());
                    //console.log(this.$refs.tree.getCheckedNodes());
                    var keys = this.$refs.tree.getCheckedKeys();//全选的节点key数组
                    //将半选和全选的nodes合并为一个数组
                    var list = [].concat(this.$refs.tree.getHalfCheckedNodes(), this.$refs.tree.getCheckedNodes())
                    axios.post('/api/Permission/UpdateControlNodes', {roleID: this.selectRoleID, list: list, keys: keys.join(',') })
                    .then(function (response) {
                        var res = response.data;
                        if (res.statusCode == 200) {
                            app.$message({
                                showClose: true,
                                message: '保存成功',
                                type: 'success'
                            });
                        }
                        else {
                            app.$message({
                                showClose: true,
                                message: res.message,
                                type: 'error'
                            });
                        }
                    })
                    .catch(function (error) {

                    })
                }
            }
        });
    </script>
}

